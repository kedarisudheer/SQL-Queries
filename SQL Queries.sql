USE intellipaat

CREATE TABLE studies(
PNAME varchar(20),
INSTITUTE varchar(20),
COURSE varchar(20),
COURSE_FEE int)

SELECT * FROM studies
truncate table studies

INSERT INTO studies
SELECT'ANAND','SABHARI','PGDCA',4500 UNION ALL
SELECT'ALTAF','COIT','DCA',7200 UNION ALL
SELECT'JULIANA','BDPS','MCA',22000 UNION ALL
SELECT'KAMALA','PRAGATHI','DCA',5000 UNION ALL
SELECT'MARY','SABHARI','PGDCA ',4500 UNION ALL
SELECT'NELSON','PRAGATHI','DAP',6200 UNION ALL
SELECT'PATRICK','PRAGATHI','DCAP',5200 UNION ALL
SELECT'QADIR','APPLE','HDCA',14000 UNION ALL
SELECT'RAMESH','SABHARI','PGDCA',4500 UNION ALL
SELECT'REBECCA','BRILLIANT','DCAP',11000 UNION ALL
SELECT'REMITHA','BDPS','DCS',6000 UNION ALL
SELECT'REVATHI','SABHARI','DAP',5000 UNION ALL
SELECT'VIJAYA','BDPS','DCA',48000

CREATE TABLE software(
PNAME varchar(20),
TITLE varchar(20),
DEVELOPIN varchar(20),
SCOST decimal(10,2),
DCOST int,
SOLD int)

SELECT * FROM software

INSERT INTO software
SELECT'MARY','README','CPP',300,1200,84 UNION ALL
SELECT'ANAND','PARACHUTES','BASIC',399.95,6000,43 UNION ALL
SELECT'ANAND','VIDEO TITLING','PASCAL',7500,16000,9 UNION ALL
SELECT'JULIANA','INVENTORY','COBOL',3000,3500,0 UNION ALL
SELECT'KAMALA','PAYROLL PKG.','DBASE',9000,20000,7 UNION ALL
SELECT'MARY','FINANCIAL ACCT.','ORACLE',18000,85000,4 UNION ALL
SELECT'MARY','CODE GENERATOR','C',4500,20000,23 UNION ALL
SELECT'PATTRICK','README','CPP',300,1200,84 UNION ALL
SELECT'QADIR','BOMBS AWAY','ASSEMBLY',750,3000,11 UNION ALL
SELECT'QADIR','VACCINES','C',1900,3100,21 UNION ALL
SELECT'RAMESH','HOTEL MGMT.','DBASE',13000,35000,4 UNION ALL
SELECT'RAMESH','DEAD LEE','PASCAL',599.95,4500,73 UNION ALL
SELECT'REMITHA','PC UTILITIES','C',725,5000,51 UNION ALL
SELECT'REMITHA','TSR HELP PKG.','ASSEMBLY',2500,6000,7 UNION ALL
SELECT'REVATHI','HOSPITAL MGMT.','PASCAL',1100,75000,2 UNION ALL
SELECT'VIJAYA','TSR EDITOR','C',900,700,6

CREATE TABLE programmer(
PNAME VARCHAR(20),
DOB DATE,
DOJ DATE,
GENDER VARCHAR(1),
PROF1 VARCHAR(15),
PROF2 VARCHAR(15),
SALARY INT)

SELECT * FROM programmer

INSERT INTO programmer
SELECT'ANAND','12-Apr-66','21-Apr-92','M','PASCAL','BASIC',3200 UNION ALL
SELECT'ALTAF','02-Jul-64','13-Nov-90','M','CLIPPER','COBOL',2800 UNION ALL
SELECT'JULIANA','31-Jan-60','21-Apr-90','F','COBOL','DBASE',3000 UNION ALL
SELECT'KAMALA','30-Oct-68','02-Jan-92','F','C','DBASE',2900 UNION ALL
SELECT'MARY','24-Jun-70','01-Feb-91','F','CPP','ORACLE',4500 UNION ALL
SELECT'NELSON','11-Sep-85','11-Oct-89','M','COBOL','DBASE',2500 UNION ALL
SELECT'PATTRICK','10-Nov-65','21-Apr-90','M','PASCAL','CLIPPER',2800 UNION ALL
SELECT'QADIR','31-Aug-65','21-Apr-91','M','ASSEMBLY','C',3000 UNION ALL
SELECT 'RAMESH','03-May-67','28-Feb-91','M','PASCAL','DBASE',3200 UNION ALL
SELECT 'REBECCA','01-Jan-67','01-Dec-90','F','BASIC','COBOL',2500 UNION ALL
SELECT 'REMITHA','19-Apr-70','20-Apr-93','F','C','ASSEMBLY',3600 UNION ALL
SELECT 'REVATHI','02-Dec-69','02-Jan-92','F','PASCAL','BASIC',3700 UNION ALL
SELECT 'VIJAYA','14-Dec-65','02-May-92','F','FOXPRO','C',3500


#1
SELECT AVG(scost) AS Selling_Cost_Average FROM SOFTWARE WHERE developin ='PASCAL'
#2
SELECT pname, YEAR(DOB) - YEAR(2022) AS AGE FROM PROGRAMMER
#3
SELECT pname, course FROM Studies WHERE course = 'DAP'#4SELECT pname, DOB FROM PROGRAMMER WHERE MONTH(DOB)=1#5
SELECT DEVELOPIN AS PACKAGE, MAX(SOLD) AS Highest_copies_sold FROM SOFTWARE GROUP BY DEVELOPIN
#6
SELECT MIN(COURSE_FEE) AS LOWEST_COURSE_FEE FROM STUDIES
#7 
SELECT COUNT(PNAME) FROM STUDIES WHERE COURSE='PGDCA'
#8 
SELECT SUM(SCOST*SOLD) AS REVENUE FROM SOFTWARE WHERE developin='C'
#9 
SELECT * FROM SOFTWARE WHERE PNAME='RAMESH'
#10 
SELECT COUNT(PNAME) FROM STUDIES WHERE INSTITUTE ='SABHARI'
#11 
SELECT * FROM SOFTWARE WHERE SCOST > 2000
#12  
SELECT * FROM SOFTWARE WHERE (SCOST*SOLD) > DCOST
#13 
SELECT MAX(DCOST) FROM SOFTWARE WHERE DEVELOPIN ='BASIC'
#14 
SELECT COUNT(DEVELOPIN) FROM SOFTWARE WHERE DEVELOPIN ='DBASE'
#15 
SELECT COUNT(pname) FROM Studies WHERE INSTITUTE ='PRAGATHI'
#16 
SELECT COUNT(pname) FROM Studies WHERE COURSE_FEE BETWEEN 5000 AND 10000
#17
SELECT AVG(COURSE_FEE) FROM Studies
#18
SELECT * FROM PROGRAMMER WHERE PROF1='C' OR PROF2='C'
#19 
SELECT COUNT(PNAME) FROM PROGRAMMER WHERE PROF1='COBOL' OR PROF2='PASCAL'
#20 
SELECT * FROM PROGRAMMER WHERE PROF1 !='C' AND PROF2 !='PASCAL' AND PROF1 !='PASCAL' AND PROF2 !='C'
#21
SELECT MAX (DATEDIFF(YY,DOB,GETDATE())) AS OLDEST_MALE FROM PROGRAMMER WHERE GENDER ='M'
#22
SELECT AVG (DATEDIFF(YY,DOB,GETDATE())) AS AGE FROM PROGRAMMER WHERE GENDER ='F'
#23
SELECT PNAME,DATEDIFF(YY,DOJ,GETDATE()) AS EXPERIENCE FROM PROGRAMMER ORDER BY DOJ DESC
#24
SELECT pname, DOB FROM PROGRAMMER WHERE MONTH(DOB)=12
#25 
SELECT COUNT(pname) AS FEMALE_PROGRAMMER FROM PROGRAMMER WHERE GENDER = 'F'
#26
SELECT DISTINCT PROF1 FROM PROGRAMMER WHERE GENDER = 'M' UNION SELECT DISTINCT PROF2 FROM PROGRAMMER WHERE GENDER = 'M'
#27 
SELECT AVG(SALARY) AS AVERAGE_SALARY FROM PROGRAMMER
#28 
SELECT COUNT(SALARY) FROM PROGRAMMER WHERE SALARY BETWEEN 2000 AND 4000
#29 
SELECT * FROM PROGRAMMER WHERE PROF1 NOT IN ('CLIPPER' , 'COBOL', 'PASCAL') AND PROF2 NOT IN ('CLIPPER', 'COBOL', 'PASCAL')
#30 
SELECT TITLE, DCOST FROM SOFTWARE
#31
SELECT PNAME, SCOST*SOLD AS SALES_VALUE FROM SOFTWARE
#32 
SELECT TITLE, SOLD FROM SOFTWARE ORDER BY PNAME
#33
SELECT PNAME, DEVELOPIN, SCOST FROM SOFTWARE ORDER BY DEVELOPIN
#34 
SELECT DEVELOPIN,AVG(DCOST) AS AVGDEVCOST,AVG(SCOST) AS AVGSELLCOST,AVG(SCOST) AS PRICEPERCPY FROM SOFTWARE GROUP BY DEVELOPIN
#35
SELECT PNAME, MAX(SCOST+DCOST) AS COSTLY, MIN(SCOST+DCOST) AS CHEAP FROM SOFTWARE GROUP BY PNAME
#36
SELECT INSTITUTE, COUNT(COURSE) AS NO_OF_COURSE, AVG(COURSE_FEE) AS AVG_FEES FROM STUDIES GROUP BY INSTITUTE
#37 
SELECT INSTITUTE, COUNT(PNAME) AS NUM_OF_STUDENTS FROM STUDIES GROUP BY INSTITUTE
#38
SELECT PNAME, GENDER FROM PROGRAMMER GROUP BY PNAME, GENDER
#39
SELECT PNAME, TITLE FROM SOFTWARE GROUP BY PNAME, TITLE
#40 
SELECT COUNT(TITLE) FROM SOFTWARE WHERE DEVELOPIN NOT IN ('C' , 'CPP')
#41
SELECT COUNT(TITLE) AS NUM_OF_PACKAGES, DEVELOPIN FROM SOFTWARE WHERE DCOST>1000 GROUP BY DEVELOPIN
#42
SELECT AVG(SCOST-DCOST) AS AVG_DIFFERENCE, TITLE FROM SOFTWARE GROUP BY TITLE
#43
SELECT PNAME,SUM(SCOST) AS TOTAL_SALES_COST, SUM(DCOST) AS TOTAL_DEV_COST, SUM(DCOST-SCOST) AS AMT_TO_BE_RECOVERED FROM SOFTWARE GROUP BY PNAME#44
SELECT MAX(SALARY) AS MAX_SALARY, MIN(SALARY) AS MIN_SALARY, AVG(SALARY) AS AVERAGE_SALARY FROM PROGRAMMER WHERE SALARY > 2000
#45 
SELECT * FROM PROGRAMMER WHERE SALARY=(SELECT MAX(SALARY) FROM PROGRAMMER WHERE PROF1 LIKE 'C' OR PROF2 LIKE 'C')
#46 
SELECT * FROM PROGRAMMER WHERE SALARY=(SELECT MAX(SALARY)FROM PROGRAMMER WHERE (PROF1 LIKE 'COBOL' OR PROF2 LIKE 'COBOL')) AND GENDER LIKE 'F'
#47 
SELECT MAX(A.SALARY) AS MAX_SALARY, A.PROF1 FROM PROGRAMMER A, PROGRAMMER B WHERE A.SALARY = B.SALARY GROUP BY A.PROF1
#48 
SELECT TOP 1 PNAME, (DATEDIFF(YY,DOJ,GETDATE())) FROM PROGRAMMER GROUP BY DOJ, PNAME ORDER BY DOJ DESC
#49 
SELECT TOP 1 MAX(DATEDIFF(YY,DOB,GETDATE())) AS MOST_EXPERIENCED FROM PROGRAMMER WHERE PROF1 ='PASCAL' OR PROF2 = 'PASCAL' GROUP BY DOJ ORDER BY DOJ DESC
#50 
SELECT PROF1 FROM PROGRAMMER GROUP BY PROF1 HAVING PROF1 NOT IN (SELECT PROF2 FROM PROGRAMMER) AND COUNT(PROF1)=1 UNION
SELECT PROF2 FROM PROGRAMMER GROUP BY PROF2 HAVING PROF2 NOT IN (SELECT PROF1 FROM PROGRAMMER) AND COUNT(PROF2)=1;
#51 
SELECT PNAME FROM PROGRAMMER WHERE PROF1 IN (SELECT PROF1 FROM PROGRAMMER GROUP BY PROF1 HAVING PROF1 NOT IN (SELECT PROF2 FROM PROGRAMMER) AND COUNT(PROF1)=1 UNION
SELECT PROF2 FROM PROGRAMMER GROUP BY PROF2 HAVING PROF2 NOT IN (SELECT PROF1 FROM PROGRAMMER) AND COUNT(PROF2)=1) UNION
SELECT PNAME FROM PROGRAMMER WHERE PROF2 IN (SELECT PROF1 FROM PROGRAMMER GROUP BY PROF1 HAVING PROF1 NOT IN (SELECT PROF2 FROM PROGRAMMER) AND COUNT(PROF1)=1 UNION
SELECT PROF2 FROM PROGRAMMER GROUP BY PROF2 HAVING PROF2 NOT IN (SELECT PROF1 FROM PROGRAMMER) AND COUNT(PROF2)=1)  
#52 
SELECT TOP 1 (DATEDIFF(YY,DOB,GETDATE())) AS YOUNGEST, PNAME FROM PROGRAMMER  WHERE PROF1 LIKE 'DBASE' OR PROF2 LIKE 'DBASE' ORDER BY DOB DESC
#53
SELECT * FROM PROGRAMMER WHERE GENDER LIKE 'F' AND SALARY >3000 AND (PROF1 NOT IN('C','C++','ORACLE','DBASE') OR PROF2 NOT IN('C','C++','ORACLE','DBASE'))
#54 
SELECT TOP 1 INSTITUTE, COUNT(INSTITUTE) FROM STUDIES GROUP BY INSTITUTE ORDER BY COUNT(INSTITUTE) DESC
#55 
SELECT COURSE FROM STUDIES WHERE COURSE_FEE = (SELECT MAX(COURSE_FEE) FROM STUDIES)
#56 
SELECT TOP 1 COURSE, COUNT(COURSE) FROM STUDIES GROUP BY COURSE ORDER BY COUNT(COURSE) DESC
#57 
SELECT INSTITUTE  FROM STUDIES WHERE COURSE_FEE = (SELECT MAX(COURSE_FEE) FROM STUDIES)
#58 
SELECT INSTITUTE, COURSE FROM STUDIES
WHERE COURSE_FEE < (SELECT AVG(COURSE_FEE) FROM STUDIES)
#59
SELECT COURSE
FROM STUDIES
WHERE COURSE_FEE < (SELECT AVG(COURSE_FEE)+1000 FROM STUDIES)
AND COURSE_FEE > (SELECT AVG(COURSE_FEE)-1000 FROM STUDIES)
#60
SELECT TITLE FROM SOFTWARE
WHERE DCOST = (SELECT MAX(DCOST) FROM SOFTWARE)
#61
SELECT COURSE
FROM STUDIES
HAVING COUNT(PNAME)<(SELECT AVG(COUNT(PNAME))
FROM STUDIES
GROUP BY COURSE
#62
SELECT TITLE, SCOST
FROM SOFTWARE
WHERE SCOST = (SELECT MIN(SCOST) FROM SOFTWARE)
#63
SELECT PNAME, TITLE, SOLD
FROM SOFTWARE
WHERE SOLD = (SELECT MIN(SOLD) FROM SOFTWARE)
#64
SELECT DEVELOPIN, SCOST
FROM SOFTWARE
WHERE SCOST = (SELECT MAX(SCOST) FROM SOFTWARE)
#65
SELECT SOLD,TITLE
FROM SOFTWARE
WHERE TITLE = (SELECT TITLE
FROM SOFTWARE
WHERE (DCOST-SCOST)=(SELECT MIN(DCOST-SCOST) FROM SOFTWARE))
#66
SELECT TITLE
FROM SOFTWARE
WHERE DCOST = (SELECT MAX(DCOST)
FROM SOFTWARE
WHERE DEVELOPIN LIKE 'PASCAL')
#67
SELECT DEVELOPIN FROM SOFTWARE
GROUP BY DEVELOPIN
HAVING MAX(DEVELOPIN) = (SELECT MAX(DEVELOPIN) FROM SOFTWARE)
#68 
SELECT PNAME FROM SOFTWARE
GROUP BY PNAME
HAVING MAX(PNAME) = (SELECT MAX(PNAME) FROM SOFTWARE)
#69
SELECT PNAME,DCOST
FROM SOFTWARE
WHERE DCOST = (SELECT MAX(DCOST) FROM SOFTWARE)
#70
SELECT TITLE
FROM SOFTWARE
WHERE SOLD < (SELECT AVG(SOLD) FROM SOFTWARE)
#71
SELECT DISTINCT PNAME
FROM SOFTWARE
WHERE SOLD*SCOST > 2*DCOST
#72
SELECT PNAME,TITLE, DEVELOPIN
FROM SOFTWARE
WHERE DCOST IN (SELECT MIN(DCOST)
FROM SOFTWARE
GROUP BY DEVELOPIN)
#73
SELECT PNAME, DEVELOPIN
FROM SOFTWARE
WHERE SOLD IN (SELECT MAX(SOLD)
FROM SOFTWARE
GROUP BY PNAME)
UNION
SELECT PNAME, DEVELOPIN
FROM SOFTWARE
WHERE SOLD IN (SELECT MIN(SOLD)
FROM SOFTWARE
GROUP BY PNAME)
#74
SELECT DISTINCT PNAME FROM PROGRAMMER
WHERE DOB=(SELECT (MAX(DOB))
FROM PROGRAMMER
WHERE DATEDIFF(YY,DOB,GETDATE()) = 56) 
#75
SELECT PNAME
FROM PROGRAMMER
WHERE DOJ=(SELECT (MIN(DOJ))
FROM PROGRAMMER
WHERE DATEDIFF(YY,DOJ,GETDATE()) = 29) 
#76 
SELECT TOP 1 YEAR(DOB), COUNT(*) FROM PROGRAMMER
GROUP BY YEAR (DOB)
ORDER BY COUNT(DOB) DESC
#77 
SELECT YEAR (DOJ) , COUNT(*) FROM PROGRAMMER
GROUP BY YEAR (DOJ)
ORDER BY COUNT (DOJ) DESC
#78
SELECT PROF1
FROM PROGRAMMER
GROUP BY PROF1
HAVING PROF1= (SELECT MAX(PROF1)
FROM PROGRAMMER)
UNION
SELECT PROF2 FROM PROGRAMMER
GROUP BY PROF2
HAVING PROF2 = (SELECT MAX(PROF2)
FROM PROGRAMMER)#79SELECT PNAME
FROM PROGRAMMER
WHERE GENDER LIKE 'M'
AND SALARY < (SELECT(AVG(SALARY))
FROM PROGRAMMER
WHERE GENDER LIKE 'F')#80SELECT PNAME
FROM PROGRAMMER
WHERE GENDER LIKE 'F'
AND SALARY > (SELECT(MAX(SALARY))
FROM PROGRAMMER
WHERE GENDER LIKE 'M')#81SELECT PROF1
FROM PROGRAMMER
GROUP BY PROF1
HAVING PROF1= (SELECT MAX(PROF1)
FROM PROGRAMMER)
UNION
SELECT PROF2 FROM PROGRAMMER
GROUP BY PROF2
HAVING PROF2 = (SELECT MAX(PROF2)
FROM PROGRAMMER)#82SELECT A.PNAME, A.SALARY FROM PROGRAMMER A
INNER JOIN PROGRAMMER B ON A.SALARY=B.SALARY 
AND A.PNAME <> B.PNAME#83SELECT TITLE, DEVELOPIN FROM SOFTWARE
RIGHT JOIN PROGRAMMER ON
SOFTWARE.PNAME=PROGRAMMER.PNAME 
WHERE SALARY >3000 AND GENDER ='M'#84SELECT * FROM SOFTWARE
LEFT JOIN PROGRAMMER ON
SOFTWARE.PNAME=PROGRAMMER.PNAME 
WHERE DEVELOPIN='PASCAL'AND GENDER ='F'#85SELECT * FROM PROGRAMMER
WHERE DATEDIFF(YY,DOJ,GETDATE()) = 31#86SELECT * FROM SOFTWARE
JOIN PROGRAMMER ON SOFTWARE.PNAME=PROGRAMMER.PNAME
JOIN STUDIES ON PROGRAMMER.PNAME=STUDIES.PNAME AND
GENDER='F' AND INSTITUTE='PRAGATHI'#87SELECT INSTITUTE,
COUNT(SOFTWARE.DEVELOPIN) AS NUM_PACKAGES,
COUNT(SOFTWARE.SOLD) AS NUM_COPIES_SOLD,
SUM(SOFTWARE.SOLD*SOFTWARE.SCOST) AS SALES_VALUE
FROM SOFTWARE JOIN STUDIES ON
SOFTWARE.PNAME=STUDIES.PNAME#88SELECT TITLE, INSTITUTE, COUNT(INSTITUTE) FROM SOFTWARE
JOIN PROGRAMMER ON SOFTWARE.PNAME=PROGRAMMER.PNAME
JOIN STUDIES ON SOFTWARE.PNAME=STUDIES.PNAME
WHERE DEVELOPIN='DBASE' AND GENDER='M'
GROUP BY TITLE, INSTITUTE#89SELECT SOFTWARE.PNAME, TITLE, GENDER, DATEDIFF(YY,DOB,GETDATE()) AS AGE FROM
SOFTWARE 
JOIN PROGRAMMER ON SOFTWARE.PNAME = PROGRAMMER.PNAME
WHERE DATEDIFF(YY,DOB,GETDATE()) > 56 AND GENDER ='M' OR
DATEDIFF(YY,DOB,GETDATE()) <45 AND GENDER ='F'#90SELECT DISTINCT x.* FROM software x, programmer y
WHERE y.prof1 <> x.developin AND y.prof2 <> x.developin
and x.pname = y.pname#91SELECT * FROM SOFTWARE
JOIN PROGRAMMER ON PROGRAMMER.PNAME=SOFTWARE.PNAME
JOIN STUDIES ON STUDIES.PNAME=SOFTWARE.PNAME
WHERE GENDER='M' AND INSTITUTE='SABHARI'#92SELECT PNAME FROM PROGRAMMER
WHERE PNAME NOT IN (SELECT PNAME FROM SOFTWARE)#93SELECT SUM(SCOST) FROM SOFTWARE
JOIN STUDIES ON STUDIES.PNAME=SOFTWARE.PNAME
WHERE INSTITUTE ='APPLE'#94SELECT a.PNAME, a.DOJ FROMPROGRAMMER a, PROGRAMMER b
WHERE a.DOJ=b.DOJ AND a.PNAME <> b.PNAME#95SELECT DISTINCT (a.PNAME), a.PROF2 FROM PROGRAMMER a, PROGRAMMER b
WHERE a.PROF2=b.PROF2 AND a.PNAME <> b.PNAME#96SELECT INSTITUTE, SUM(SOLD*SCOST) FROM STUDIES 
JOIN SOFTWARE ON STUDIES.PNAME=SOFTWARE.PNAME
GROUP BY INSTITUTE#97SELECT INSTITUTE FROM STUDIES
JOIN SOFTWARE ON SOFTWARE.PNAME=STUDIES.PNAME
GROUP BY INSTITUTE, DCOST
HAVING MAX(DCOST)=(SELECT MAX(DCOST) FROM SOFTWARE)#98SELECT PROF1 FROM PROGRAMMER
WHERE PROF1 NOT IN (SELECT DEVELOPIN FROM SOFTWARE)
UNION
SELECT PROF2 FROM PROGRAMMER
WHERE PROF2 NOT IN (SELECT DEVELOPIN FROM SOFTWARE)#99SELECT PROGRAMMER.SALARY, STUDIES.COURSE FROM PROGRAMMER
JOIN SOFTWARE ON SOFTWARE.PNAME=PROGRAMMER.PNAME
JOIN STUDIES ON STUDIES.PNAME=PROGRAMMER.PNAME
WHERE SCOST= (SELECT MAX(SCOST) FROM SOFTWARE)#100SELECT AVG(SALARY) FROM PROGRAMMER
JOIN SOFTWARE ON SOFTWARE.PNAME=PROGRAMMER.PNAME
WHERE SOLD*SCOST>50000#101SELECT COUNT(SOFTWARE.PNAME) FROM SOFTWARE
JOIN STUDIES ON STUDIES.PNAME=SOFTWARE.PNAME
GROUP BY INSTITUTE
HAVING MIN (COURSE_FEE)= (SELECT MIN (COURSE_FEE) FROM STUDIES);#102SELECT COUNT(SOFTWARE.PNAME), STUDIES.INSTITUTE FROM SOFTWARE
JOIN STUDIES ON STUDIES.PNAME=SOFTWARE.PNAME
JOIN PROGRAMMER ON PROGRAMMER.PNAME=SOFTWARE.PNAME
GROUP BY STUDIES.INSTITUTE 
HAVING MIN (COURSE_FEE)= (SELECT MIN (COURSE_FEE) FROM STUDIES)#103SELECT COUNT(SOFTWARE.TITLE) FROM
PROGRAMMER INNER JOIN SOFTWARE
ON PROGRAMMER.PNAME=SOFTWARE.PNAME
WHERE PROGRAMMER.GENDER='F' AND PROGRAMMER.SALARY>
(SELECT MAX(SALARY) FROM PROGRAMMER WHERE GENDER='M')#104SELECT COUNT(*) FROM SOFTWARE S, PROGRAMMER P
WHERE P.PNAME=S.PNAME
GROUP BY DOJ HAVING MAX(DOJ)=(SELECT MAX(DOJ)
FROM STUDIES ST, PROGRAMMER P, SOFTWARE S
WHERE P.PNAME=S.PNAME AND ST.PNAME=P.PNAME AND (INSTITUTE ='BDPS'))#105SELECT PNAME, INSTITUTE FROM STUDIES
WHERE PNAME IN (SELECT PNAME FROM SOFTWARE)#106SELECT COUNT(TITLE)AS TITLE, COUNT(PROF1) AS PROF1, COUNT(PROF2) AS PROF2 
FROM PROGRAMMER
JOIN SOFTWARE ON SOFTWARE.PNAME=PROGRAMMER.PNAME
GROUP BY DEVELOPIN#107SELECT S.PNAME, COUNT(DEVELOPIN)
FROM PROGRAMMER P, SOFTWARE S
WHERE P.PNAME=S.PNAME
GROUP BY S.PNAME
